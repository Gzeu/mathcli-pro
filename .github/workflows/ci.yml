name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level moderate
      
      - name: Run tests
        run: npm test
      
      - name: Run test coverage
        run: npm run test:coverage
        if: matrix.node-version == '22.x'
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '22.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check package vulnerabilities
        run: npm audit --audit-level moderate
      
      - name: Verify package integrity
        run: npm ls

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Test CLI commands
        run: |
          node index.js calculate "2+2*5"
          node index.js convert "100 cm to m"
          node index.js plot-chart 1 2 3 4 5
      
      - name: Test batch operations
        run: |
          echo "col1,col2" > test.csv
          echo "1,2" >> test.csv
          echo "3,4" >> test.csv
          node index.js calculate-from-file test.csv "sum(col1)"
      
      - name: Test history functionality
        run: |
          node index.js calculate "5*5"
          node index.js history

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Verify build
        run: npm pack --dry-run
      
      - name: Check package size
        run: |
          npm pack
          ls -lah *.tgz
          echo "Package size check completed"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint, integration, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Build package
        run: npm pack
      
      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=$(node -p "JSON.parse(require('fs').readFileSync('./package.json', 'utf8')).version")
          PUBLISHED_VERSION=$(npm view mathcli-pro version 2>/dev/null || echo "0.0.0")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published_version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Publish to npm
        if: steps.version_check.outputs.version_changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version_check.outputs.current_version }}
          release_name: Release v${{ steps.version_check.outputs.current_version }}
          body: |
            ## Changes in v${{ steps.version_check.outputs.current_version }}
            
            - Repository cleanup and organization
            - Enhanced documentation and README
            - Improved package metadata
            - Better CI/CD pipeline
            
            ### Installation
            ```bash
            npm install -g mathcli-pro@${{ steps.version_check.outputs.current_version }}
            ```
            
            ### Quick Start
            ```bash
            mathcli-pro calculate "2+2*5"
            mathcli-pro convert "100 cm to m"
            ```
          draft: false
          prerelease: false